name: Build and Publish Docker Image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    strategy:
      matrix:
        arch: [amd64, arm64]
        include:
          - arch: amd64
            runs-on: ubuntu-latest
          - arch: arm64
            runs-on: ["self-hosted", "ARM64"]

    runs-on: ${{ matrix.runs-on }}
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Copy config file
        run: cp config.example.toml config.toml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value={{date 'YYYY.MM.DDHHmm'}}-${{ matrix.arch }}
            type=raw,value=latest-${{ matrix.arch }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/${{ matrix.arch }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  create-manifest:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push manifest
        run: |
          DATE_TAG=$(date +'%Y.%m.%d%H%M')
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest-arm64
          docker manifest create ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${DATE_TAG} \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${DATE_TAG}-amd64 \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${DATE_TAG}-arm64
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker manifest push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${DATE_TAG}
