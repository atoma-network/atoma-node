name: Coverage

on:
  pull_request:

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: "0"
  RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"
  RUSTDOCFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  coverage:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_DB: atoma
          POSTGRES_USER: atoma
          POSTGRES_PASSWORD: atoma
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libtss2-dev
        timeout-minutes: 5

      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-directories: |
            ~/.cargo/registry
            ~/.cargo/git
            target

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true

      - name: Run tests
        run: cargo test --verbose
        timeout-minutes: 5

      - name: Generate coverage
        uses: actions-rs/grcov@v0.1

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          fail_ci_if_error: true
